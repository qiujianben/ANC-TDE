// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "07/08/2016 15:29:19"
                                                                                
// Verilog Test Bench template for design : TDE_ANC
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 1 ns
module TDE_ANC_vlg_tst();
parameter DATA_LENGTH=10000;
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clk_100m;
reg clk_s;
reg [13:0] d_int14;
reg rst_n;
reg [13:0] x_int14;
// wires                                               
wire [31:0]  TD;
wire [13:0]  d_canel_out;
wire [31:0]  Smpr_TD;


reg [15:0] d[0:DATA_LENGTH-1];
reg [15:0] x[0:DATA_LENGTH-1];
integer TDfile;
integer Smpr_TDfile;
integer Doutfile;
// assign statements (if any)                          
TDE_ANC i1 (
// port map - connection between master ports and signals/registers   
	.TD(TD),
	.Smpr_TD(Smpr_TD),
	.clk_100m(clk_100m),
	.clk_s(clk_s),
	.d_canel_out(d_canel_out),
	.d_int14(d_int14),
	.rst_n(rst_n),
	.x_int14(x_int14)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
                                                       
// --> end                 
$readmemh("d_noise.txt",d,0,DATA_LENGTH-1);
$readmemh("x_noise.txt",x,0,DATA_LENGTH-1); 
TDfile = $fopen("TimeDelay.txt");     
Smpr_TDfile = $fopen("SmoothTimeDelay.txt");   
Doutfile = $fopen("Dout.txt");     


 #0 clk_s = 1'b0;
 #0 clk_100m = 1'b1;
 #0 rst_n = 1'b0;
 #1102 rst_n = 1'b1;                         
$display("Running testbench");                       
end   
 always
     begin
      #5 clk_100m = ~clk_100m;
     end                               
always
     begin
      #500 	clk_s	= ~clk_s;
     end

integer i;	  
always@(negedge clk_s )                                                   
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
	if(!rst_n)
		begin
			i<=0;
			d_int14<=0;
			x_int14<=0;
		end
	else	
		begin
			d_int14<=d[i%DATA_LENGTH];
			x_int14<=x[i%DATA_LENGTH];
			if(i>=2)
				begin
						$fdisplay(TDfile,"%d",TD);
						$fdisplay(Smpr_TDfile,"%d",Smpr_TD);
						$fdisplay(Doutfile,"%d",d_canel_out);
				end
			i<=i+1;
		end
end                                                    
endmodule

